#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ManagementDispatch.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLyCongVan")]
	public partial class DataBaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBlogBusiness(BlogBusiness instance);
    partial void UpdateBlogBusiness(BlogBusiness instance);
    partial void DeleteBlogBusiness(BlogBusiness instance);
    partial void InsertPhongBan(PhongBan instance);
    partial void UpdatePhongBan(PhongBan instance);
    partial void DeletePhongBan(PhongBan instance);
    partial void InsertBlogPermission(BlogPermission instance);
    partial void UpdateBlogPermission(BlogPermission instance);
    partial void DeleteBlogPermission(BlogPermission instance);
    partial void InsertCongVanDen(CongVanDen instance);
    partial void UpdateCongVanDen(CongVanDen instance);
    partial void DeleteCongVanDen(CongVanDen instance);
    partial void InsertCongVanDi(CongVanDi instance);
    partial void UpdateCongVanDi(CongVanDi instance);
    partial void DeleteCongVanDi(CongVanDi instance);
    partial void InsertDonVi(DonVi instance);
    partial void UpdateDonVi(DonVi instance);
    partial void DeleteDonVi(DonVi instance);
    partial void InsertGrantPermission(GrantPermission instance);
    partial void UpdateGrantPermission(GrantPermission instance);
    partial void DeleteGrantPermission(GrantPermission instance);
    partial void InsertLoaiCongVan(LoaiCongVan instance);
    partial void UpdateLoaiCongVan(LoaiCongVan instance);
    partial void DeleteLoaiCongVan(LoaiCongVan instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertNhatKyHeThong(NhatKyHeThong instance);
    partial void UpdateNhatKyHeThong(NhatKyHeThong instance);
    partial void DeleteNhatKyHeThong(NhatKyHeThong instance);
    #endregion
		
		public DataBaseDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QuanLyCongVanConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataBaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataBaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataBaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataBaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BlogBusiness> BlogBusinesses
		{
			get
			{
				return this.GetTable<BlogBusiness>();
			}
		}
		
		public System.Data.Linq.Table<PhongBan> PhongBans
		{
			get
			{
				return this.GetTable<PhongBan>();
			}
		}
		
		public System.Data.Linq.Table<BlogPermission> BlogPermissions
		{
			get
			{
				return this.GetTable<BlogPermission>();
			}
		}
		
		public System.Data.Linq.Table<CongVanDen> CongVanDens
		{
			get
			{
				return this.GetTable<CongVanDen>();
			}
		}
		
		public System.Data.Linq.Table<CongVanDi> CongVanDis
		{
			get
			{
				return this.GetTable<CongVanDi>();
			}
		}
		
		public System.Data.Linq.Table<DonVi> DonVis
		{
			get
			{
				return this.GetTable<DonVi>();
			}
		}
		
		public System.Data.Linq.Table<GrantPermission> GrantPermissions
		{
			get
			{
				return this.GetTable<GrantPermission>();
			}
		}
		
		public System.Data.Linq.Table<LoaiCongVan> LoaiCongVans
		{
			get
			{
				return this.GetTable<LoaiCongVan>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<NhatKyHeThong> NhatKyHeThongs
		{
			get
			{
				return this.GetTable<NhatKyHeThong>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BlogBusiness")]
	public partial class BlogBusiness : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BusinessId;
		
		private string _BusinessName;
		
		private EntitySet<BlogPermission> _BlogPermissions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusinessIdChanging(string value);
    partial void OnBusinessIdChanged();
    partial void OnBusinessNameChanging(string value);
    partial void OnBusinessNameChanged();
    #endregion
		
		public BlogBusiness()
		{
			this._BlogPermissions = new EntitySet<BlogPermission>(new Action<BlogPermission>(this.attach_BlogPermissions), new Action<BlogPermission>(this.detach_BlogPermissions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BusinessId
		{
			get
			{
				return this._BusinessId;
			}
			set
			{
				if ((this._BusinessId != value))
				{
					this.OnBusinessIdChanging(value);
					this.SendPropertyChanging();
					this._BusinessId = value;
					this.SendPropertyChanged("BusinessId");
					this.OnBusinessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BusinessName
		{
			get
			{
				return this._BusinessName;
			}
			set
			{
				if ((this._BusinessName != value))
				{
					this.OnBusinessNameChanging(value);
					this.SendPropertyChanging();
					this._BusinessName = value;
					this.SendPropertyChanged("BusinessName");
					this.OnBusinessNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlogBusiness_BlogPermission", Storage="_BlogPermissions", ThisKey="BusinessId", OtherKey="BusinessId")]
		public EntitySet<BlogPermission> BlogPermissions
		{
			get
			{
				return this._BlogPermissions;
			}
			set
			{
				this._BlogPermissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BlogPermissions(BlogPermission entity)
		{
			this.SendPropertyChanging();
			entity.BlogBusiness = this;
		}
		
		private void detach_BlogPermissions(BlogPermission entity)
		{
			this.SendPropertyChanging();
			entity.BlogBusiness = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhongBan")]
	public partial class PhongBan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPhongBan;
		
		private string _TenPhongBan;
		
		private string _GhiChu;
		
		private System.Nullable<bool> _isDelete;
		
		private EntitySet<CongVanDen> _CongVanDens;
		
		private EntitySet<CongVanDi> _CongVanDis;
		
		private EntitySet<NhanVien> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPhongBanChanging(int value);
    partial void OnIDPhongBanChanged();
    partial void OnTenPhongBanChanging(string value);
    partial void OnTenPhongBanChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnisDeleteChanging(System.Nullable<bool> value);
    partial void OnisDeleteChanged();
    #endregion
		
		public PhongBan()
		{
			this._CongVanDens = new EntitySet<CongVanDen>(new Action<CongVanDen>(this.attach_CongVanDens), new Action<CongVanDen>(this.detach_CongVanDens));
			this._CongVanDis = new EntitySet<CongVanDi>(new Action<CongVanDi>(this.attach_CongVanDis), new Action<CongVanDi>(this.detach_CongVanDis));
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPhongBan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDPhongBan
		{
			get
			{
				return this._IDPhongBan;
			}
			set
			{
				if ((this._IDPhongBan != value))
				{
					this.OnIDPhongBanChanging(value);
					this.SendPropertyChanging();
					this._IDPhongBan = value;
					this.SendPropertyChanged("IDPhongBan");
					this.OnIDPhongBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhongBan", DbType="NVarChar(50)")]
		public string TenPhongBan
		{
			get
			{
				return this._TenPhongBan;
			}
			set
			{
				if ((this._TenPhongBan != value))
				{
					this.OnTenPhongBanChanging(value);
					this.SendPropertyChanging();
					this._TenPhongBan = value;
					this.SendPropertyChanged("TenPhongBan");
					this.OnTenPhongBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDelete", DbType="Bit")]
		public System.Nullable<bool> isDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this.OnisDeleteChanging(value);
					this.SendPropertyChanging();
					this._isDelete = value;
					this.SendPropertyChanged("isDelete");
					this.OnisDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongBan_CongVanDen", Storage="_CongVanDens", ThisKey="IDPhongBan", OtherKey="IDPhongBan")]
		public EntitySet<CongVanDen> CongVanDens
		{
			get
			{
				return this._CongVanDens;
			}
			set
			{
				this._CongVanDens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongBan_CongVanDi", Storage="_CongVanDis", ThisKey="IDPhongBan", OtherKey="IDPhongBan")]
		public EntitySet<CongVanDi> CongVanDis
		{
			get
			{
				return this._CongVanDis;
			}
			set
			{
				this._CongVanDis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongBan_NhanVien", Storage="_NhanViens", ThisKey="IDPhongBan", OtherKey="IDPhongBan")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CongVanDens(CongVanDen entity)
		{
			this.SendPropertyChanging();
			entity.PhongBan = this;
		}
		
		private void detach_CongVanDens(CongVanDen entity)
		{
			this.SendPropertyChanging();
			entity.PhongBan = null;
		}
		
		private void attach_CongVanDis(CongVanDi entity)
		{
			this.SendPropertyChanging();
			entity.PhongBan = this;
		}
		
		private void detach_CongVanDis(CongVanDi entity)
		{
			this.SendPropertyChanging();
			entity.PhongBan = null;
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.PhongBan = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.PhongBan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BlogPermission")]
	public partial class BlogPermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PermissionId;
		
		private string _PermissionName;
		
		private string _BusinessId;
		
		private string _Description;
		
		private EntitySet<GrantPermission> _GrantPermissions;
		
		private EntityRef<BlogBusiness> _BlogBusiness;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPermissionIdChanging(int value);
    partial void OnPermissionIdChanged();
    partial void OnPermissionNameChanging(string value);
    partial void OnPermissionNameChanged();
    partial void OnBusinessIdChanging(string value);
    partial void OnBusinessIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public BlogPermission()
		{
			this._GrantPermissions = new EntitySet<GrantPermission>(new Action<GrantPermission>(this.attach_GrantPermissions), new Action<GrantPermission>(this.detach_GrantPermissions));
			this._BlogBusiness = default(EntityRef<BlogBusiness>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PermissionId
		{
			get
			{
				return this._PermissionId;
			}
			set
			{
				if ((this._PermissionId != value))
				{
					this.OnPermissionIdChanging(value);
					this.SendPropertyChanging();
					this._PermissionId = value;
					this.SendPropertyChanged("PermissionId");
					this.OnPermissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PermissionName
		{
			get
			{
				return this._PermissionName;
			}
			set
			{
				if ((this._PermissionName != value))
				{
					this.OnPermissionNameChanging(value);
					this.SendPropertyChanging();
					this._PermissionName = value;
					this.SendPropertyChanged("PermissionName");
					this.OnPermissionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BusinessId
		{
			get
			{
				return this._BusinessId;
			}
			set
			{
				if ((this._BusinessId != value))
				{
					if (this._BlogBusiness.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBusinessIdChanging(value);
					this.SendPropertyChanging();
					this._BusinessId = value;
					this.SendPropertyChanged("BusinessId");
					this.OnBusinessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlogPermission_GrantPermission", Storage="_GrantPermissions", ThisKey="PermissionId", OtherKey="PermissionId")]
		public EntitySet<GrantPermission> GrantPermissions
		{
			get
			{
				return this._GrantPermissions;
			}
			set
			{
				this._GrantPermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlogBusiness_BlogPermission", Storage="_BlogBusiness", ThisKey="BusinessId", OtherKey="BusinessId", IsForeignKey=true)]
		public BlogBusiness BlogBusiness
		{
			get
			{
				return this._BlogBusiness.Entity;
			}
			set
			{
				BlogBusiness previousValue = this._BlogBusiness.Entity;
				if (((previousValue != value) 
							|| (this._BlogBusiness.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BlogBusiness.Entity = null;
						previousValue.BlogPermissions.Remove(this);
					}
					this._BlogBusiness.Entity = value;
					if ((value != null))
					{
						value.BlogPermissions.Add(this);
						this._BusinessId = value.BusinessId;
					}
					else
					{
						this._BusinessId = default(string);
					}
					this.SendPropertyChanged("BlogBusiness");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GrantPermissions(GrantPermission entity)
		{
			this.SendPropertyChanging();
			entity.BlogPermission = this;
		}
		
		private void detach_GrantPermissions(GrantPermission entity)
		{
			this.SendPropertyChanging();
			entity.BlogPermission = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CongVanDen")]
	public partial class CongVanDen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDCongVanDen;
		
		private System.Nullable<int> _IDLoaiCongVan;
		
		private string _NoiDung;
		
		private System.DateTime _NgayGui;
		
		private System.DateTime _NgayNhan;
		
		private string _TenNguoiGui;
		
		private System.Nullable<int> _IDPhongBan;
		
		private System.Nullable<int> _IDDonViGui;
		
		private System.Nullable<int> _IDDonViNhan;
		
		private string _TenNguoiNhan;
		
		private string _File;
		
		private string _AnhScan;
		
		private bool _BaoMat;
		
		private int _STT;
		
		private EntityRef<PhongBan> _PhongBan;
		
		private EntityRef<DonVi> _DonVi;
		
		private EntityRef<DonVi> _DonVi1;
		
		private EntityRef<LoaiCongVan> _LoaiCongVan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCongVanDenChanging(string value);
    partial void OnIDCongVanDenChanged();
    partial void OnIDLoaiCongVanChanging(System.Nullable<int> value);
    partial void OnIDLoaiCongVanChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnNgayGuiChanging(System.DateTime value);
    partial void OnNgayGuiChanged();
    partial void OnNgayNhanChanging(System.DateTime value);
    partial void OnNgayNhanChanged();
    partial void OnTenNguoiGuiChanging(string value);
    partial void OnTenNguoiGuiChanged();
    partial void OnIDPhongBanChanging(System.Nullable<int> value);
    partial void OnIDPhongBanChanged();
    partial void OnIDDonViGuiChanging(System.Nullable<int> value);
    partial void OnIDDonViGuiChanged();
    partial void OnIDDonViNhanChanging(System.Nullable<int> value);
    partial void OnIDDonViNhanChanged();
    partial void OnTenNguoiNhanChanging(string value);
    partial void OnTenNguoiNhanChanged();
    partial void OnFileChanging(string value);
    partial void OnFileChanged();
    partial void OnAnhScanChanging(string value);
    partial void OnAnhScanChanged();
    partial void OnBaoMatChanging(bool value);
    partial void OnBaoMatChanged();
    partial void OnSTTChanging(int value);
    partial void OnSTTChanged();
    #endregion
		
		public CongVanDen()
		{
			this._PhongBan = default(EntityRef<PhongBan>);
			this._DonVi = default(EntityRef<DonVi>);
			this._DonVi1 = default(EntityRef<DonVi>);
			this._LoaiCongVan = default(EntityRef<LoaiCongVan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCongVanDen", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string IDCongVanDen
		{
			get
			{
				return this._IDCongVanDen;
			}
			set
			{
				if ((this._IDCongVanDen != value))
				{
					this.OnIDCongVanDenChanging(value);
					this.SendPropertyChanging();
					this._IDCongVanDen = value;
					this.SendPropertyChanged("IDCongVanDen");
					this.OnIDCongVanDenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLoaiCongVan", DbType="Int")]
		public System.Nullable<int> IDLoaiCongVan
		{
			get
			{
				return this._IDLoaiCongVan;
			}
			set
			{
				if ((this._IDLoaiCongVan != value))
				{
					if (this._LoaiCongVan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLoaiCongVanChanging(value);
					this.SendPropertyChanging();
					this._IDLoaiCongVan = value;
					this.SendPropertyChanged("IDLoaiCongVan");
					this.OnIDLoaiCongVanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGui", DbType="DateTime NOT NULL")]
		public System.DateTime NgayGui
		{
			get
			{
				return this._NgayGui;
			}
			set
			{
				if ((this._NgayGui != value))
				{
					this.OnNgayGuiChanging(value);
					this.SendPropertyChanging();
					this._NgayGui = value;
					this.SendPropertyChanged("NgayGui");
					this.OnNgayGuiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayNhan", DbType="DateTime NOT NULL")]
		public System.DateTime NgayNhan
		{
			get
			{
				return this._NgayNhan;
			}
			set
			{
				if ((this._NgayNhan != value))
				{
					this.OnNgayNhanChanging(value);
					this.SendPropertyChanging();
					this._NgayNhan = value;
					this.SendPropertyChanged("NgayNhan");
					this.OnNgayNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNguoiGui", DbType="NVarChar(50)")]
		public string TenNguoiGui
		{
			get
			{
				return this._TenNguoiGui;
			}
			set
			{
				if ((this._TenNguoiGui != value))
				{
					this.OnTenNguoiGuiChanging(value);
					this.SendPropertyChanging();
					this._TenNguoiGui = value;
					this.SendPropertyChanged("TenNguoiGui");
					this.OnTenNguoiGuiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPhongBan", DbType="Int")]
		public System.Nullable<int> IDPhongBan
		{
			get
			{
				return this._IDPhongBan;
			}
			set
			{
				if ((this._IDPhongBan != value))
				{
					if (this._PhongBan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPhongBanChanging(value);
					this.SendPropertyChanging();
					this._IDPhongBan = value;
					this.SendPropertyChanged("IDPhongBan");
					this.OnIDPhongBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDonViGui", DbType="Int")]
		public System.Nullable<int> IDDonViGui
		{
			get
			{
				return this._IDDonViGui;
			}
			set
			{
				if ((this._IDDonViGui != value))
				{
					if (this._DonVi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDonViGuiChanging(value);
					this.SendPropertyChanging();
					this._IDDonViGui = value;
					this.SendPropertyChanged("IDDonViGui");
					this.OnIDDonViGuiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDonViNhan", DbType="Int")]
		public System.Nullable<int> IDDonViNhan
		{
			get
			{
				return this._IDDonViNhan;
			}
			set
			{
				if ((this._IDDonViNhan != value))
				{
					if (this._DonVi1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDonViNhanChanging(value);
					this.SendPropertyChanging();
					this._IDDonViNhan = value;
					this.SendPropertyChanged("IDDonViNhan");
					this.OnIDDonViNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNguoiNhan", DbType="NVarChar(50)")]
		public string TenNguoiNhan
		{
			get
			{
				return this._TenNguoiNhan;
			}
			set
			{
				if ((this._TenNguoiNhan != value))
				{
					this.OnTenNguoiNhanChanging(value);
					this.SendPropertyChanging();
					this._TenNguoiNhan = value;
					this.SendPropertyChanged("TenNguoiNhan");
					this.OnTenNguoiNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[File]", Storage="_File", DbType="NVarChar(100)")]
		public string File
		{
			get
			{
				return this._File;
			}
			set
			{
				if ((this._File != value))
				{
					this.OnFileChanging(value);
					this.SendPropertyChanging();
					this._File = value;
					this.SendPropertyChanged("File");
					this.OnFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhScan", DbType="NVarChar(100)")]
		public string AnhScan
		{
			get
			{
				return this._AnhScan;
			}
			set
			{
				if ((this._AnhScan != value))
				{
					this.OnAnhScanChanging(value);
					this.SendPropertyChanging();
					this._AnhScan = value;
					this.SendPropertyChanged("AnhScan");
					this.OnAnhScanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaoMat", DbType="Bit NOT NULL")]
		public bool BaoMat
		{
			get
			{
				return this._BaoMat;
			}
			set
			{
				if ((this._BaoMat != value))
				{
					this.OnBaoMatChanging(value);
					this.SendPropertyChanging();
					this._BaoMat = value;
					this.SendPropertyChanged("BaoMat");
					this.OnBaoMatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int STT
		{
			get
			{
				return this._STT;
			}
			set
			{
				if ((this._STT != value))
				{
					this.OnSTTChanging(value);
					this.SendPropertyChanging();
					this._STT = value;
					this.SendPropertyChanged("STT");
					this.OnSTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongBan_CongVanDen", Storage="_PhongBan", ThisKey="IDPhongBan", OtherKey="IDPhongBan", IsForeignKey=true)]
		public PhongBan PhongBan
		{
			get
			{
				return this._PhongBan.Entity;
			}
			set
			{
				PhongBan previousValue = this._PhongBan.Entity;
				if (((previousValue != value) 
							|| (this._PhongBan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhongBan.Entity = null;
						previousValue.CongVanDens.Remove(this);
					}
					this._PhongBan.Entity = value;
					if ((value != null))
					{
						value.CongVanDens.Add(this);
						this._IDPhongBan = value.IDPhongBan;
					}
					else
					{
						this._IDPhongBan = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhongBan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonVi_CongVanDen", Storage="_DonVi", ThisKey="IDDonViGui", OtherKey="IDDonVi", IsForeignKey=true)]
		public DonVi DonVi
		{
			get
			{
				return this._DonVi.Entity;
			}
			set
			{
				DonVi previousValue = this._DonVi.Entity;
				if (((previousValue != value) 
							|| (this._DonVi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonVi.Entity = null;
						previousValue.CongVanDens.Remove(this);
					}
					this._DonVi.Entity = value;
					if ((value != null))
					{
						value.CongVanDens.Add(this);
						this._IDDonViGui = value.IDDonVi;
					}
					else
					{
						this._IDDonViGui = default(Nullable<int>);
					}
					this.SendPropertyChanged("DonVi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonVi_CongVanDen1", Storage="_DonVi1", ThisKey="IDDonViNhan", OtherKey="IDDonVi", IsForeignKey=true)]
		public DonVi DonVi1
		{
			get
			{
				return this._DonVi1.Entity;
			}
			set
			{
				DonVi previousValue = this._DonVi1.Entity;
				if (((previousValue != value) 
							|| (this._DonVi1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonVi1.Entity = null;
						previousValue.CongVanDens1.Remove(this);
					}
					this._DonVi1.Entity = value;
					if ((value != null))
					{
						value.CongVanDens1.Add(this);
						this._IDDonViNhan = value.IDDonVi;
					}
					else
					{
						this._IDDonViNhan = default(Nullable<int>);
					}
					this.SendPropertyChanged("DonVi1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiCongVan_CongVanDen", Storage="_LoaiCongVan", ThisKey="IDLoaiCongVan", OtherKey="IDLoaiCongVan", IsForeignKey=true)]
		public LoaiCongVan LoaiCongVan
		{
			get
			{
				return this._LoaiCongVan.Entity;
			}
			set
			{
				LoaiCongVan previousValue = this._LoaiCongVan.Entity;
				if (((previousValue != value) 
							|| (this._LoaiCongVan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiCongVan.Entity = null;
						previousValue.CongVanDens.Remove(this);
					}
					this._LoaiCongVan.Entity = value;
					if ((value != null))
					{
						value.CongVanDens.Add(this);
						this._IDLoaiCongVan = value.IDLoaiCongVan;
					}
					else
					{
						this._IDLoaiCongVan = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiCongVan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CongVanDi")]
	public partial class CongVanDi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDCongVanDi;
		
		private System.Nullable<int> _IDLoaiCongVan;
		
		private string _TenNguoiGui;
		
		private System.Nullable<int> _IDDonViGui;
		
		private string _NoiDungCongViec;
		
		private System.DateTime _NgayGui;
		
		private string _File;
		
		private string _AnhScan;
		
		private bool _BaoMat;
		
		private int _STT;
		
		private System.Nullable<int> _IDPhongBan;
		
		private EntityRef<PhongBan> _PhongBan;
		
		private EntityRef<DonVi> _DonVi;
		
		private EntityRef<LoaiCongVan> _LoaiCongVan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCongVanDiChanging(string value);
    partial void OnIDCongVanDiChanged();
    partial void OnIDLoaiCongVanChanging(System.Nullable<int> value);
    partial void OnIDLoaiCongVanChanged();
    partial void OnTenNguoiGuiChanging(string value);
    partial void OnTenNguoiGuiChanged();
    partial void OnIDDonViGuiChanging(System.Nullable<int> value);
    partial void OnIDDonViGuiChanged();
    partial void OnNoiDungCongViecChanging(string value);
    partial void OnNoiDungCongViecChanged();
    partial void OnNgayGuiChanging(System.DateTime value);
    partial void OnNgayGuiChanged();
    partial void OnFileChanging(string value);
    partial void OnFileChanged();
    partial void OnAnhScanChanging(string value);
    partial void OnAnhScanChanged();
    partial void OnBaoMatChanging(bool value);
    partial void OnBaoMatChanged();
    partial void OnSTTChanging(int value);
    partial void OnSTTChanged();
    partial void OnIDPhongBanChanging(System.Nullable<int> value);
    partial void OnIDPhongBanChanged();
    #endregion
		
		public CongVanDi()
		{
			this._PhongBan = default(EntityRef<PhongBan>);
			this._DonVi = default(EntityRef<DonVi>);
			this._LoaiCongVan = default(EntityRef<LoaiCongVan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCongVanDi", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string IDCongVanDi
		{
			get
			{
				return this._IDCongVanDi;
			}
			set
			{
				if ((this._IDCongVanDi != value))
				{
					this.OnIDCongVanDiChanging(value);
					this.SendPropertyChanging();
					this._IDCongVanDi = value;
					this.SendPropertyChanged("IDCongVanDi");
					this.OnIDCongVanDiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLoaiCongVan", DbType="Int")]
		public System.Nullable<int> IDLoaiCongVan
		{
			get
			{
				return this._IDLoaiCongVan;
			}
			set
			{
				if ((this._IDLoaiCongVan != value))
				{
					if (this._LoaiCongVan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLoaiCongVanChanging(value);
					this.SendPropertyChanging();
					this._IDLoaiCongVan = value;
					this.SendPropertyChanged("IDLoaiCongVan");
					this.OnIDLoaiCongVanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNguoiGui", DbType="NVarChar(50)")]
		public string TenNguoiGui
		{
			get
			{
				return this._TenNguoiGui;
			}
			set
			{
				if ((this._TenNguoiGui != value))
				{
					this.OnTenNguoiGuiChanging(value);
					this.SendPropertyChanging();
					this._TenNguoiGui = value;
					this.SendPropertyChanged("TenNguoiGui");
					this.OnTenNguoiGuiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDonViGui", DbType="Int")]
		public System.Nullable<int> IDDonViGui
		{
			get
			{
				return this._IDDonViGui;
			}
			set
			{
				if ((this._IDDonViGui != value))
				{
					if (this._DonVi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDonViGuiChanging(value);
					this.SendPropertyChanging();
					this._IDDonViGui = value;
					this.SendPropertyChanged("IDDonViGui");
					this.OnIDDonViGuiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDungCongViec", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string NoiDungCongViec
		{
			get
			{
				return this._NoiDungCongViec;
			}
			set
			{
				if ((this._NoiDungCongViec != value))
				{
					this.OnNoiDungCongViecChanging(value);
					this.SendPropertyChanging();
					this._NoiDungCongViec = value;
					this.SendPropertyChanged("NoiDungCongViec");
					this.OnNoiDungCongViecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGui", DbType="DateTime NOT NULL")]
		public System.DateTime NgayGui
		{
			get
			{
				return this._NgayGui;
			}
			set
			{
				if ((this._NgayGui != value))
				{
					this.OnNgayGuiChanging(value);
					this.SendPropertyChanging();
					this._NgayGui = value;
					this.SendPropertyChanged("NgayGui");
					this.OnNgayGuiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[File]", Storage="_File", DbType="NVarChar(100)")]
		public string File
		{
			get
			{
				return this._File;
			}
			set
			{
				if ((this._File != value))
				{
					this.OnFileChanging(value);
					this.SendPropertyChanging();
					this._File = value;
					this.SendPropertyChanged("File");
					this.OnFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhScan", DbType="NVarChar(100)")]
		public string AnhScan
		{
			get
			{
				return this._AnhScan;
			}
			set
			{
				if ((this._AnhScan != value))
				{
					this.OnAnhScanChanging(value);
					this.SendPropertyChanging();
					this._AnhScan = value;
					this.SendPropertyChanged("AnhScan");
					this.OnAnhScanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaoMat", DbType="Bit NOT NULL")]
		public bool BaoMat
		{
			get
			{
				return this._BaoMat;
			}
			set
			{
				if ((this._BaoMat != value))
				{
					this.OnBaoMatChanging(value);
					this.SendPropertyChanging();
					this._BaoMat = value;
					this.SendPropertyChanged("BaoMat");
					this.OnBaoMatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int STT
		{
			get
			{
				return this._STT;
			}
			set
			{
				if ((this._STT != value))
				{
					this.OnSTTChanging(value);
					this.SendPropertyChanging();
					this._STT = value;
					this.SendPropertyChanged("STT");
					this.OnSTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPhongBan", DbType="Int")]
		public System.Nullable<int> IDPhongBan
		{
			get
			{
				return this._IDPhongBan;
			}
			set
			{
				if ((this._IDPhongBan != value))
				{
					if (this._PhongBan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPhongBanChanging(value);
					this.SendPropertyChanging();
					this._IDPhongBan = value;
					this.SendPropertyChanged("IDPhongBan");
					this.OnIDPhongBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongBan_CongVanDi", Storage="_PhongBan", ThisKey="IDPhongBan", OtherKey="IDPhongBan", IsForeignKey=true)]
		public PhongBan PhongBan
		{
			get
			{
				return this._PhongBan.Entity;
			}
			set
			{
				PhongBan previousValue = this._PhongBan.Entity;
				if (((previousValue != value) 
							|| (this._PhongBan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhongBan.Entity = null;
						previousValue.CongVanDis.Remove(this);
					}
					this._PhongBan.Entity = value;
					if ((value != null))
					{
						value.CongVanDis.Add(this);
						this._IDPhongBan = value.IDPhongBan;
					}
					else
					{
						this._IDPhongBan = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhongBan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonVi_CongVanDi", Storage="_DonVi", ThisKey="IDDonViGui", OtherKey="IDDonVi", IsForeignKey=true)]
		public DonVi DonVi
		{
			get
			{
				return this._DonVi.Entity;
			}
			set
			{
				DonVi previousValue = this._DonVi.Entity;
				if (((previousValue != value) 
							|| (this._DonVi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonVi.Entity = null;
						previousValue.CongVanDis.Remove(this);
					}
					this._DonVi.Entity = value;
					if ((value != null))
					{
						value.CongVanDis.Add(this);
						this._IDDonViGui = value.IDDonVi;
					}
					else
					{
						this._IDDonViGui = default(Nullable<int>);
					}
					this.SendPropertyChanged("DonVi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiCongVan_CongVanDi", Storage="_LoaiCongVan", ThisKey="IDLoaiCongVan", OtherKey="IDLoaiCongVan", IsForeignKey=true)]
		public LoaiCongVan LoaiCongVan
		{
			get
			{
				return this._LoaiCongVan.Entity;
			}
			set
			{
				LoaiCongVan previousValue = this._LoaiCongVan.Entity;
				if (((previousValue != value) 
							|| (this._LoaiCongVan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiCongVan.Entity = null;
						previousValue.CongVanDis.Remove(this);
					}
					this._LoaiCongVan.Entity = value;
					if ((value != null))
					{
						value.CongVanDis.Add(this);
						this._IDLoaiCongVan = value.IDLoaiCongVan;
					}
					else
					{
						this._IDLoaiCongVan = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiCongVan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonVi")]
	public partial class DonVi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDDonVi;
		
		private string _TenDonVi;
		
		private string _ThongTin;
		
		private System.Nullable<bool> _isDelete;
		
		private EntitySet<CongVanDen> _CongVanDens;
		
		private EntitySet<CongVanDen> _CongVanDens1;
		
		private EntitySet<CongVanDi> _CongVanDis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDDonViChanging(int value);
    partial void OnIDDonViChanged();
    partial void OnTenDonViChanging(string value);
    partial void OnTenDonViChanged();
    partial void OnThongTinChanging(string value);
    partial void OnThongTinChanged();
    partial void OnisDeleteChanging(System.Nullable<bool> value);
    partial void OnisDeleteChanged();
    #endregion
		
		public DonVi()
		{
			this._CongVanDens = new EntitySet<CongVanDen>(new Action<CongVanDen>(this.attach_CongVanDens), new Action<CongVanDen>(this.detach_CongVanDens));
			this._CongVanDens1 = new EntitySet<CongVanDen>(new Action<CongVanDen>(this.attach_CongVanDens1), new Action<CongVanDen>(this.detach_CongVanDens1));
			this._CongVanDis = new EntitySet<CongVanDi>(new Action<CongVanDi>(this.attach_CongVanDis), new Action<CongVanDi>(this.detach_CongVanDis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDonVi", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDDonVi
		{
			get
			{
				return this._IDDonVi;
			}
			set
			{
				if ((this._IDDonVi != value))
				{
					this.OnIDDonViChanging(value);
					this.SendPropertyChanging();
					this._IDDonVi = value;
					this.SendPropertyChanged("IDDonVi");
					this.OnIDDonViChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDonVi", DbType="NVarChar(70)")]
		public string TenDonVi
		{
			get
			{
				return this._TenDonVi;
			}
			set
			{
				if ((this._TenDonVi != value))
				{
					this.OnTenDonViChanging(value);
					this.SendPropertyChanging();
					this._TenDonVi = value;
					this.SendPropertyChanged("TenDonVi");
					this.OnTenDonViChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThongTin", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ThongTin
		{
			get
			{
				return this._ThongTin;
			}
			set
			{
				if ((this._ThongTin != value))
				{
					this.OnThongTinChanging(value);
					this.SendPropertyChanging();
					this._ThongTin = value;
					this.SendPropertyChanged("ThongTin");
					this.OnThongTinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDelete", DbType="Bit")]
		public System.Nullable<bool> isDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this.OnisDeleteChanging(value);
					this.SendPropertyChanging();
					this._isDelete = value;
					this.SendPropertyChanged("isDelete");
					this.OnisDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonVi_CongVanDen", Storage="_CongVanDens", ThisKey="IDDonVi", OtherKey="IDDonViGui")]
		public EntitySet<CongVanDen> CongVanDens
		{
			get
			{
				return this._CongVanDens;
			}
			set
			{
				this._CongVanDens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonVi_CongVanDen1", Storage="_CongVanDens1", ThisKey="IDDonVi", OtherKey="IDDonViNhan")]
		public EntitySet<CongVanDen> CongVanDens1
		{
			get
			{
				return this._CongVanDens1;
			}
			set
			{
				this._CongVanDens1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonVi_CongVanDi", Storage="_CongVanDis", ThisKey="IDDonVi", OtherKey="IDDonViGui")]
		public EntitySet<CongVanDi> CongVanDis
		{
			get
			{
				return this._CongVanDis;
			}
			set
			{
				this._CongVanDis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CongVanDens(CongVanDen entity)
		{
			this.SendPropertyChanging();
			entity.DonVi = this;
		}
		
		private void detach_CongVanDens(CongVanDen entity)
		{
			this.SendPropertyChanging();
			entity.DonVi = null;
		}
		
		private void attach_CongVanDens1(CongVanDen entity)
		{
			this.SendPropertyChanging();
			entity.DonVi1 = this;
		}
		
		private void detach_CongVanDens1(CongVanDen entity)
		{
			this.SendPropertyChanging();
			entity.DonVi1 = null;
		}
		
		private void attach_CongVanDis(CongVanDi entity)
		{
			this.SendPropertyChanging();
			entity.DonVi = this;
		}
		
		private void detach_CongVanDis(CongVanDi entity)
		{
			this.SendPropertyChanging();
			entity.DonVi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GrantPermission")]
	public partial class GrantPermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PermissionId;
		
		private int _IDNhanVien;
		
		private EntityRef<BlogPermission> _BlogPermission;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPermissionIdChanging(int value);
    partial void OnPermissionIdChanged();
    partial void OnIDNhanVienChanging(int value);
    partial void OnIDNhanVienChanged();
    #endregion
		
		public GrantPermission()
		{
			this._BlogPermission = default(EntityRef<BlogPermission>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PermissionId
		{
			get
			{
				return this._PermissionId;
			}
			set
			{
				if ((this._PermissionId != value))
				{
					if (this._BlogPermission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPermissionIdChanging(value);
					this.SendPropertyChanging();
					this._PermissionId = value;
					this.SendPropertyChanged("PermissionId");
					this.OnPermissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNhanVien", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDNhanVien
		{
			get
			{
				return this._IDNhanVien;
			}
			set
			{
				if ((this._IDNhanVien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDNhanVienChanging(value);
					this.SendPropertyChanging();
					this._IDNhanVien = value;
					this.SendPropertyChanged("IDNhanVien");
					this.OnIDNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlogPermission_GrantPermission", Storage="_BlogPermission", ThisKey="PermissionId", OtherKey="PermissionId", IsForeignKey=true)]
		public BlogPermission BlogPermission
		{
			get
			{
				return this._BlogPermission.Entity;
			}
			set
			{
				BlogPermission previousValue = this._BlogPermission.Entity;
				if (((previousValue != value) 
							|| (this._BlogPermission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BlogPermission.Entity = null;
						previousValue.GrantPermissions.Remove(this);
					}
					this._BlogPermission.Entity = value;
					if ((value != null))
					{
						value.GrantPermissions.Add(this);
						this._PermissionId = value.PermissionId;
					}
					else
					{
						this._PermissionId = default(int);
					}
					this.SendPropertyChanged("BlogPermission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_GrantPermission", Storage="_NhanVien", ThisKey="IDNhanVien", OtherKey="IDNhanVien", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.GrantPermissions.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.GrantPermissions.Add(this);
						this._IDNhanVien = value.IDNhanVien;
					}
					else
					{
						this._IDNhanVien = default(int);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiCongVan")]
	public partial class LoaiCongVan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDLoaiCongVan;
		
		private string _TenLoaiCongVan;
		
		private System.Nullable<bool> _isDelete;
		
		private EntitySet<CongVanDen> _CongVanDens;
		
		private EntitySet<CongVanDi> _CongVanDis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDLoaiCongVanChanging(int value);
    partial void OnIDLoaiCongVanChanged();
    partial void OnTenLoaiCongVanChanging(string value);
    partial void OnTenLoaiCongVanChanged();
    partial void OnisDeleteChanging(System.Nullable<bool> value);
    partial void OnisDeleteChanged();
    #endregion
		
		public LoaiCongVan()
		{
			this._CongVanDens = new EntitySet<CongVanDen>(new Action<CongVanDen>(this.attach_CongVanDens), new Action<CongVanDen>(this.detach_CongVanDens));
			this._CongVanDis = new EntitySet<CongVanDi>(new Action<CongVanDi>(this.attach_CongVanDis), new Action<CongVanDi>(this.detach_CongVanDis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLoaiCongVan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDLoaiCongVan
		{
			get
			{
				return this._IDLoaiCongVan;
			}
			set
			{
				if ((this._IDLoaiCongVan != value))
				{
					this.OnIDLoaiCongVanChanging(value);
					this.SendPropertyChanging();
					this._IDLoaiCongVan = value;
					this.SendPropertyChanged("IDLoaiCongVan");
					this.OnIDLoaiCongVanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiCongVan", DbType="NVarChar(50)")]
		public string TenLoaiCongVan
		{
			get
			{
				return this._TenLoaiCongVan;
			}
			set
			{
				if ((this._TenLoaiCongVan != value))
				{
					this.OnTenLoaiCongVanChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiCongVan = value;
					this.SendPropertyChanged("TenLoaiCongVan");
					this.OnTenLoaiCongVanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDelete", DbType="Bit")]
		public System.Nullable<bool> isDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this.OnisDeleteChanging(value);
					this.SendPropertyChanging();
					this._isDelete = value;
					this.SendPropertyChanged("isDelete");
					this.OnisDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiCongVan_CongVanDen", Storage="_CongVanDens", ThisKey="IDLoaiCongVan", OtherKey="IDLoaiCongVan")]
		public EntitySet<CongVanDen> CongVanDens
		{
			get
			{
				return this._CongVanDens;
			}
			set
			{
				this._CongVanDens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiCongVan_CongVanDi", Storage="_CongVanDis", ThisKey="IDLoaiCongVan", OtherKey="IDLoaiCongVan")]
		public EntitySet<CongVanDi> CongVanDis
		{
			get
			{
				return this._CongVanDis;
			}
			set
			{
				this._CongVanDis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CongVanDens(CongVanDen entity)
		{
			this.SendPropertyChanging();
			entity.LoaiCongVan = this;
		}
		
		private void detach_CongVanDens(CongVanDen entity)
		{
			this.SendPropertyChanging();
			entity.LoaiCongVan = null;
		}
		
		private void attach_CongVanDis(CongVanDi entity)
		{
			this.SendPropertyChanging();
			entity.LoaiCongVan = this;
		}
		
		private void detach_CongVanDis(CongVanDi entity)
		{
			this.SendPropertyChanging();
			entity.LoaiCongVan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDNhanVien;
		
		private string _HoTen;
		
		private string _Username;
		
		private string _Password;
		
		private string _Email;
		
		private System.DateTime _NgaySinh;
		
		private string _SDT;
		
		private System.Nullable<int> _IDPhongBan;
		
		private bool _Lock;
		
		private EntitySet<GrantPermission> _GrantPermissions;
		
		private EntitySet<NhatKyHeThong> _NhatKyHeThongs;
		
		private EntityRef<PhongBan> _PhongBan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDNhanVienChanging(int value);
    partial void OnIDNhanVienChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnNgaySinhChanging(System.DateTime value);
    partial void OnNgaySinhChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnIDPhongBanChanging(System.Nullable<int> value);
    partial void OnIDPhongBanChanged();
    partial void OnLockChanging(bool value);
    partial void OnLockChanged();
    #endregion
		
		public NhanVien()
		{
			this._GrantPermissions = new EntitySet<GrantPermission>(new Action<GrantPermission>(this.attach_GrantPermissions), new Action<GrantPermission>(this.detach_GrantPermissions));
			this._NhatKyHeThongs = new EntitySet<NhatKyHeThong>(new Action<NhatKyHeThong>(this.attach_NhatKyHeThongs), new Action<NhatKyHeThong>(this.detach_NhatKyHeThongs));
			this._PhongBan = default(EntityRef<PhongBan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNhanVien", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDNhanVien
		{
			get
			{
				return this._IDNhanVien;
			}
			set
			{
				if ((this._IDNhanVien != value))
				{
					this.OnIDNhanVienChanging(value);
					this.SendPropertyChanging();
					this._IDNhanVien = value;
					this.SendPropertyChanged("IDNhanVien");
					this.OnIDNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(20)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(20)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date NOT NULL")]
		public System.DateTime NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(50)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPhongBan", DbType="Int")]
		public System.Nullable<int> IDPhongBan
		{
			get
			{
				return this._IDPhongBan;
			}
			set
			{
				if ((this._IDPhongBan != value))
				{
					if (this._PhongBan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPhongBanChanging(value);
					this.SendPropertyChanging();
					this._IDPhongBan = value;
					this.SendPropertyChanged("IDPhongBan");
					this.OnIDPhongBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lock", DbType="Bit NOT NULL")]
		public bool Lock
		{
			get
			{
				return this._Lock;
			}
			set
			{
				if ((this._Lock != value))
				{
					this.OnLockChanging(value);
					this.SendPropertyChanging();
					this._Lock = value;
					this.SendPropertyChanged("Lock");
					this.OnLockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_GrantPermission", Storage="_GrantPermissions", ThisKey="IDNhanVien", OtherKey="IDNhanVien")]
		public EntitySet<GrantPermission> GrantPermissions
		{
			get
			{
				return this._GrantPermissions;
			}
			set
			{
				this._GrantPermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_NhatKyHeThong", Storage="_NhatKyHeThongs", ThisKey="IDNhanVien", OtherKey="IDNhanVien")]
		public EntitySet<NhatKyHeThong> NhatKyHeThongs
		{
			get
			{
				return this._NhatKyHeThongs;
			}
			set
			{
				this._NhatKyHeThongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongBan_NhanVien", Storage="_PhongBan", ThisKey="IDPhongBan", OtherKey="IDPhongBan", IsForeignKey=true)]
		public PhongBan PhongBan
		{
			get
			{
				return this._PhongBan.Entity;
			}
			set
			{
				PhongBan previousValue = this._PhongBan.Entity;
				if (((previousValue != value) 
							|| (this._PhongBan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhongBan.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._PhongBan.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._IDPhongBan = value.IDPhongBan;
					}
					else
					{
						this._IDPhongBan = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhongBan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GrantPermissions(GrantPermission entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_GrantPermissions(GrantPermission entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_NhatKyHeThongs(NhatKyHeThong entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_NhatKyHeThongs(NhatKyHeThong entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhatKyHeThong")]
	public partial class NhatKyHeThong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDNhatKy;
		
		private System.Nullable<int> _IDNhanVien;
		
		private string _NoiDungNhatKy;
		
		private System.Nullable<System.DateTime> _NgayGio;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDNhatKyChanging(int value);
    partial void OnIDNhatKyChanged();
    partial void OnIDNhanVienChanging(System.Nullable<int> value);
    partial void OnIDNhanVienChanged();
    partial void OnNoiDungNhatKyChanging(string value);
    partial void OnNoiDungNhatKyChanged();
    partial void OnNgayGioChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayGioChanged();
    #endregion
		
		public NhatKyHeThong()
		{
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNhatKy", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDNhatKy
		{
			get
			{
				return this._IDNhatKy;
			}
			set
			{
				if ((this._IDNhatKy != value))
				{
					this.OnIDNhatKyChanging(value);
					this.SendPropertyChanging();
					this._IDNhatKy = value;
					this.SendPropertyChanged("IDNhatKy");
					this.OnIDNhatKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNhanVien", DbType="Int")]
		public System.Nullable<int> IDNhanVien
		{
			get
			{
				return this._IDNhanVien;
			}
			set
			{
				if ((this._IDNhanVien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDNhanVienChanging(value);
					this.SendPropertyChanging();
					this._IDNhanVien = value;
					this.SendPropertyChanged("IDNhanVien");
					this.OnIDNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDungNhatKy", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string NoiDungNhatKy
		{
			get
			{
				return this._NoiDungNhatKy;
			}
			set
			{
				if ((this._NoiDungNhatKy != value))
				{
					this.OnNoiDungNhatKyChanging(value);
					this.SendPropertyChanging();
					this._NoiDungNhatKy = value;
					this.SendPropertyChanged("NoiDungNhatKy");
					this.OnNoiDungNhatKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGio", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayGio
		{
			get
			{
				return this._NgayGio;
			}
			set
			{
				if ((this._NgayGio != value))
				{
					this.OnNgayGioChanging(value);
					this.SendPropertyChanging();
					this._NgayGio = value;
					this.SendPropertyChanged("NgayGio");
					this.OnNgayGioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_NhatKyHeThong", Storage="_NhanVien", ThisKey="IDNhanVien", OtherKey="IDNhanVien", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.NhatKyHeThongs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.NhatKyHeThongs.Add(this);
						this._IDNhanVien = value.IDNhanVien;
					}
					else
					{
						this._IDNhanVien = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
